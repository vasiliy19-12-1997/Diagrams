<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36 Edg/131.0.0.0" version="26.0.4">
  <diagram id="C5RBs43oDa-KdzZeNtuy" name="Page-1">
    <mxGraphModel dx="3778" dy="2836" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="WIyWlLk6GJQsqaUBKTNV-0" />
        <mxCell id="WIyWlLk6GJQsqaUBKTNV-1" parent="WIyWlLk6GJQsqaUBKTNV-0" />
        <mxCell id="WIyWlLk6GJQsqaUBKTNV-3" value="HTML" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;glass=0;strokeWidth=1;shadow=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="160" y="80" width="120" height="40" as="geometry" />
        </mxCell>
        <mxCell id="tXAnvfTIk08DneQXC5Ik-0" value="&lt;h2&gt;HTML&lt;/h2&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;glass=0;strokeWidth=1;shadow=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="160" y="80" width="120" height="40" as="geometry" />
        </mxCell>
        <mxCell id="tXAnvfTIk08DneQXC5Ik-2" value="&lt;h2&gt;CCS&lt;/h2&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;glass=0;strokeWidth=1;shadow=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="980" y="80" width="120" height="40" as="geometry" />
        </mxCell>
        <mxCell id="tXAnvfTIk08DneQXC5Ik-12" value="" style="html=1;shadow=0;dashed=0;align=center;verticalAlign=middle;shape=mxgraph.arrows2.arrow;dy=0.67;dx=20;notch=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="290" y="70" width="670" height="60" as="geometry" />
        </mxCell>
        <mxCell id="tXAnvfTIk08DneQXC5Ik-13" value="" style="html=1;shadow=0;dashed=0;align=center;verticalAlign=middle;shape=mxgraph.arrows2.arrow;dy=0.6;dx=40;direction=south;notch=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="185" y="140" width="70" height="100" as="geometry" />
        </mxCell>
        <mxCell id="tXAnvfTIk08DneQXC5Ik-14" value="&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 1. **Основы CSS**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Синтаксис**: CSS состоит из селекторов и объявлений. Объявления включают свойства и значения.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;```css&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;селектор {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;свойство: значение;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;}&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;```&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Подключение CSS**: Внешние стили (`&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;styles.css&quot;&amp;gt;`), внутренние стили (`&amp;lt;style&amp;gt;` внутри `&amp;lt;head&amp;gt;`), встроенные стили (`style` атрибут в HTML-элементах).&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 2. **Селекторы**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Типы селекторов**:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;- **Элементные селекторы**: `p { color: blue; }`&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;- **Классы**: `.classname { color: red; }`&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;- **ID**: `#idname { color: green; }`&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;- **Атрибутные селекторы**: `[type=&quot;text&quot;] { border: 1px solid black; }`&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;- **Псевдоклассы**: `:hover`, `:focus`, `:nth-child()`&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;- **Псевдоэлементы**: `::before`, `::after`, `::first-line`&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 3. **Каскадность и специфичность**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Каскадность**: Правила CSS применяются в порядке их определения, с учетом специфичности и важности.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Специфичность**: Определяет, какое правило будет применено, если несколько правил конфликтуют.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **!important**: Используется для принудительного применения стиля.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 4. **Box Model**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Состав**: `margin`, `border`, `padding`, `content`.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Свойства**: `margin`, `border`, `padding`, `width`, `height`, `box-sizing`.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 5. **Текст и шрифты**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Шрифты**: `font-family`, `font-size`, `font-weight`, `font-style`.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Текст**: `color`, `text-align`, `text-decoration`, `text-transform`, `line-height`, `letter-spacing`.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 6. **Фоны и границы**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Фоны**: `background-color`, `background-image`, `background-repeat`, `background-position`, `background-size`.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Границы**: `border`, `border-width`, `border-style`, `border-color`, `border-radius`.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 7. **Размеры и выравнивание**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Размеры**: `width`, `height`, `min-width`, `max-width`, `min-height`, `max-height`.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Выравнивание**: `text-align`, `vertical-align`, `margin: auto`.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 8. **Позиционирование**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Типы позиционирования**: `static`, `relative`, `absolute`, `fixed`, `sticky`.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Свойства**: `top`, `right`, `bottom`, `left`, `z-index`.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 9. **Flexbox**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Контейнер**: `display: flex`, `flex-direction`, `justify-content`, `align-items`, `flex-wrap`.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Элементы**: `order`, `flex-grow`, `flex-shrink`, `flex-basis`, `align-self`.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 10. **Grid Layout**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Контейнер**: `display: grid`, `grid-template-columns`, `grid-template-rows`, `grid-gap`, `grid-template-areas`.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Элементы**: `grid-column`, `grid-row`, `grid-area`.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 11. **Анимации и переходы**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Переходы**: `transition`, `transition-property`, `transition-duration`, `transition-timing-function`, `transition-delay`.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Анимации**: `@keyframes`, `animation`, `animation-name`, `animation-duration`, `animation-timing-function`, `animation-delay`, `animation-iteration-count`, `animation-direction`, `animation-fill-mode`.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 12. **Медиазапросы**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Синтаксис**: `@media (условие) { правила }`&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Пример**: `@media (max-width: 600px) { body { background-color: lightblue; } }`&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 13. **Препроцессоры CSS**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **SASS/SCSS**: Переменные, вложенные правила, миксины, импорт файлов.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **LESS**: Переменные, вложенные правила, миксины, функции.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 14. **Методологии CSS**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **BEM (Block, Element, Modifier)**: Структурирование классов для улучшения читаемости и поддержки кода.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **SMACSS (Scalable and Modular Architecture for CSS)**: Организация CSS-кода для масштабируемости.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 15. **Оптимизация и производительность**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Минификация**: Удаление пробелов, комментариев и других ненужных символов.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Кэширование**: Использование кэширования для уменьшения количества запросов.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Сжатие**: Использование gzip или Brotli для сжатия CSS-файлов.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 16. **Доступность**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Контраст**: Использование достаточного контраста между текстом и фоном.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Шрифты**: Использование читаемых шрифтов и размеров.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Фокус**: Обеспечение видимости фокуса для интерактивных элементов.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 17. **Инструменты и ресурсы**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Инструменты разработчика**: Браузерные инструменты для отладки и тестирования CSS.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Ресурсы**: W3C, MDN Web Docs, Can I Use, CSS-Tricks.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Эти пункты охватывают основные аспекты CSS, которые важны для frontend разработчика. Понимание этих концепций поможет вам создавать стильные, отзывчивые и доступные веб-страницы.&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;glass=0;strokeWidth=1;shadow=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="710" y="250" width="660" height="1350" as="geometry" />
        </mxCell>
        <mxCell id="tXAnvfTIk08DneQXC5Ik-15" value="&lt;h1&gt;&lt;font style=&quot;font-size: 100px;&quot;&gt;Frontend RoadMap&lt;/font&gt;&lt;/h1&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;glass=0;strokeWidth=1;shadow=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="900" y="-120" width="940" height="120" as="geometry" />
        </mxCell>
        <mxCell id="tXAnvfTIk08DneQXC5Ik-16" value="&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 1. **Основы HTML**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Структура документа**: HTML-документ состоит из элементов, которые определяются тегами. Основная структура включает `&amp;lt;!DOCTYPE html&amp;gt;`, `&amp;lt;html&amp;gt;`, `&amp;lt;head&amp;gt;`, и `&amp;lt;body&amp;gt;`.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Теги и элементы**: Элементы HTML состоят из открывающего тега, содержимого и закрывающего тега (например, `&amp;lt;p&amp;gt;Текст&amp;lt;/p&amp;gt;`).&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 2. **Семантические теги**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Заголовки**: `&amp;lt;h1&amp;gt;` до `&amp;lt;h6&amp;gt;` для создания заголовков разных уровней.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Секции**: `&amp;lt;section&amp;gt;`, `&amp;lt;article&amp;gt;`, `&amp;lt;aside&amp;gt;`, `&amp;lt;nav&amp;gt;`, `&amp;lt;header&amp;gt;`, `&amp;lt;footer&amp;gt;`, `&amp;lt;main&amp;gt;` для структурирования контента.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Списки**: `&amp;lt;ul&amp;gt;` для неупорядоченных списков, `&amp;lt;ol&amp;gt;` для упорядоченных списков, `&amp;lt;li&amp;gt;` для элементов списка.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 3. **Текстовые элементы**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Параграфы**: `&amp;lt;p&amp;gt;` для создания абзацев текста.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Форматирование текста**: `&amp;lt;strong&amp;gt;` для важного текста, `&amp;lt;em&amp;gt;` для акцентирования, `&amp;lt;br&amp;gt;` для разрыва строки, `&amp;lt;hr&amp;gt;` для горизонтальной линии.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 4. **Ссылки и изображения**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Ссылки**: `&amp;lt;a href=&quot;URL&quot;&amp;gt;Текст ссылки&amp;lt;/a&amp;gt;` для создания гиперссылок.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Изображения**: `&amp;lt;img src=&quot;URL&quot; alt=&quot;Описание&quot;&amp;gt;` для вставки изображений.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 5. **Формы**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Форма**: `&amp;lt;form&amp;gt;` для создания форм.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Элементы формы**: `&amp;lt;input&amp;gt;`, `&amp;lt;textarea&amp;gt;`, `&amp;lt;button&amp;gt;`, `&amp;lt;select&amp;gt;`, `&amp;lt;option&amp;gt;`, `&amp;lt;label&amp;gt;` для различных типов ввода данных.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 6. **Таблицы**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Таблица**: `&amp;lt;table&amp;gt;`, `&amp;lt;tr&amp;gt;` для строк, `&amp;lt;td&amp;gt;` для ячеек данных, `&amp;lt;th&amp;gt;` для заголовков ячеек.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Атрибуты**: `border`, `cellpadding`, `cellspacing` для стилизации таблиц.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 7. **Мультимедиа**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Аудио и видео**: `&amp;lt;audio&amp;gt;` и `&amp;lt;video&amp;gt;` для вставки аудио и видео файлов.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Атрибуты**: `controls`, `autoplay`, `loop` для управления воспроизведением.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 8. **Атрибуты и свойства**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Общие атрибуты**: `id`, `class`, `style`, `title` для идентификации и стилизации элементов.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Специфические атрибуты**: `href` для ссылок, `src` для изображений, `alt` для альтернативного текста изображений.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 9. **Доступность**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Атрибуты доступности**: `aria-*` атрибуты для улучшения доступности контента для пользователей с ограниченными возможностями.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Семантика**: Использование семантических тегов для улучшения доступности и SEO.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 10. **Внедрение скриптов и стилей**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **CSS**: `&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;styles.css&quot;&amp;gt;` для подключения внешних стилей.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **JavaScript**: `&amp;lt;script src=&quot;script.js&quot;&amp;gt;&amp;lt;/script&amp;gt;` для подключения внешних скриптов.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 11. **Метаданные**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Мета-теги**: `&amp;lt;meta&amp;gt;` для определения метаданных, таких как кодировка, автор, описание и ключевые слова.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Заголовок**: `&amp;lt;title&amp;gt;` для определения заголовка страницы.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 12. **Фреймы и iframe**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Фреймы**: `&amp;lt;iframe&amp;gt;` для вставки одного HTML-документа в другой.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Атрибуты**: `src`, `width`, `height` для управления содержимым и размерами фрейма.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 13. **HTML5 Новые элементы и API**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Новые элементы**: `&amp;lt;canvas&amp;gt;`, `&amp;lt;figure&amp;gt;`, `&amp;lt;figcaption&amp;gt;`, `&amp;lt;mark&amp;gt;`, `&amp;lt;time&amp;gt;`, `&amp;lt;progress&amp;gt;`, `&amp;lt;meter&amp;gt;`.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **API**: Geolocation API, Web Storage API, Web Workers API и другие.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;### 14. **Валидация и отладка**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Валидация**: Использование инструментов, таких как W3C Validator, для проверки корректности HTML-кода.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- **Отладка**: Использование браузерных инструментов разработчика для отладки и тестирования HTML.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Эти пункты охватывают основные аспекты HTML, которые важны для frontend разработчика. Понимание этих концепций поможет вам создавать структурированные, доступные и функциональные веб-страницы.&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;glass=0;strokeWidth=1;shadow=0;align=center;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="-120" y="250" width="730" height="1040" as="geometry" />
        </mxCell>
        <mxCell id="tXAnvfTIk08DneQXC5Ik-17" value="" style="html=1;shadow=0;dashed=0;align=center;verticalAlign=middle;shape=mxgraph.arrows2.arrow;dy=0.6;dx=40;direction=south;notch=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="1005" y="140" width="70" height="100" as="geometry" />
        </mxCell>
        <mxCell id="tXAnvfTIk08DneQXC5Ik-18" value="&lt;div&gt;&lt;ol&gt;&lt;li&gt;Введение&lt;/li&gt;&lt;li&gt;Введение в JavaScript&lt;/li&gt;&lt;li&gt;Справочники и спецификации&lt;/li&gt;&lt;li&gt;Редакторы кода&lt;/li&gt;&lt;li&gt;Консоль разработчика&lt;/li&gt;&lt;li&gt;Основы JavaScript&lt;/li&gt;&lt;li&gt;Привет, мир!&lt;/li&gt;&lt;li&gt;Структура кода&lt;/li&gt;&lt;li&gt;Строгий режим — &quot;use strict&quot;&lt;/li&gt;&lt;li&gt;Переменные&lt;/li&gt;&lt;li&gt;Типы данных&lt;/li&gt;&lt;li&gt;Взаимодействие: alert, prompt, confirm&lt;/li&gt;&lt;li&gt;Преобразование типов&lt;/li&gt;&lt;li&gt;Базовые операторы, математика&lt;/li&gt;&lt;li&gt;Операторы сравнения&lt;/li&gt;&lt;li&gt;Условное ветвление: if, &#39;?&#39;&lt;/li&gt;&lt;li&gt;Логические операторы&lt;/li&gt;&lt;li&gt;Операторы нулевого слияния и присваивания: &#39;??&#39;, &#39;??=&#39;&lt;/li&gt;&lt;li&gt;Циклы while и for&lt;/li&gt;&lt;li&gt;Конструкция &quot;switch&quot;&lt;/li&gt;&lt;li&gt;Функции&lt;/li&gt;&lt;li&gt;Function Expression&lt;/li&gt;&lt;li&gt;Стрелочные функции, основы&lt;/li&gt;&lt;li&gt;Особенности JavaScript&lt;/li&gt;&lt;li&gt;Качество кода&lt;/li&gt;&lt;li&gt;Отладка в браузере&lt;/li&gt;&lt;li&gt;Советы по стилю кода&lt;/li&gt;&lt;li&gt;Комментарии&lt;/li&gt;&lt;li&gt;Ниндзя-код&lt;/li&gt;&lt;li&gt;Автоматическое тестирование c использованием фреймворка Mocha&lt;/li&gt;&lt;li&gt;Полифилы&lt;/li&gt;&lt;li&gt;Объекты: основы&lt;/li&gt;&lt;li&gt;Объекты&lt;/li&gt;&lt;li&gt;Копирование объектов и ссылки&lt;/li&gt;&lt;li&gt;Сборка мусора&lt;/li&gt;&lt;li&gt;Методы объекта, &quot;this&quot;&lt;/li&gt;&lt;li&gt;Конструктор, оператор &quot;new&quot;&lt;/li&gt;&lt;li&gt;Опциональная цепочка &#39;?.&#39;&lt;/li&gt;&lt;li&gt;Тип данных Symbol&lt;/li&gt;&lt;li&gt;Преобразование объектов в примитивы&lt;/li&gt;&lt;li&gt;Типы данных&lt;/li&gt;&lt;li&gt;Методы примитивов&lt;/li&gt;&lt;li&gt;Числа&lt;/li&gt;&lt;li&gt;Строки&lt;/li&gt;&lt;li&gt;Массивы&lt;/li&gt;&lt;li&gt;Методы массивов&lt;/li&gt;&lt;li&gt;Перебираемые объекты&lt;/li&gt;&lt;li&gt;Map и Set&lt;/li&gt;&lt;li&gt;WeakMap и WeakSet&lt;/li&gt;&lt;li&gt;Object.keys, values, entries&lt;/li&gt;&lt;li&gt;Деструктурирующее присваивание&lt;/li&gt;&lt;li&gt;Дата и время&lt;/li&gt;&lt;li&gt;Формат JSON, метод toJSON&lt;/li&gt;&lt;li&gt;Продвинутая работа с функциями&lt;/li&gt;&lt;li&gt;Рекурсия и стек&lt;/li&gt;&lt;li&gt;Остаточные параметры и оператор расширения&lt;/li&gt;&lt;li&gt;Область видимости переменных, замыкание&lt;/li&gt;&lt;li&gt;Устаревшее ключевое слово &quot;var&quot;&lt;/li&gt;&lt;li&gt;Глобальный объект&lt;/li&gt;&lt;li&gt;Объект функции, NFE&lt;/li&gt;&lt;li&gt;Синтаксис &quot;new Function&quot;&lt;/li&gt;&lt;li&gt;Планирование: setTimeout и setInterval&lt;/li&gt;&lt;li&gt;Декораторы и переадресация вызова, call/apply&lt;/li&gt;&lt;li&gt;Привязка контекста к функции&lt;/li&gt;&lt;li&gt;Повторяем стрелочные функции&lt;/li&gt;&lt;li&gt;Свойства объекта, их конфигурация&lt;/li&gt;&lt;li&gt;Флаги и дескрипторы свойств&lt;/li&gt;&lt;li&gt;Свойства - геттеры и сеттеры&lt;/li&gt;&lt;li&gt;Прототипы, наследование&lt;/li&gt;&lt;li&gt;Прототипное наследование&lt;/li&gt;&lt;li&gt;F.prototype&lt;/li&gt;&lt;li&gt;Встроенные прототипы&lt;/li&gt;&lt;li&gt;Методы прототипов, объекты без свойства __proto__&lt;/li&gt;&lt;li&gt;Классы&lt;/li&gt;&lt;li&gt;Класс: базовый синтаксис&lt;/li&gt;&lt;li&gt;Наследование классов&lt;/li&gt;&lt;li&gt;Статические свойства и методы&lt;/li&gt;&lt;li&gt;Приватные и защищённые методы и свойства&lt;/li&gt;&lt;li&gt;Расширение встроенных классов&lt;/li&gt;&lt;li&gt;Проверка класса: &quot;instanceof&quot;&lt;/li&gt;&lt;li&gt;Примеси&lt;/li&gt;&lt;li&gt;Обработка ошибок&lt;/li&gt;&lt;li&gt;Обработка ошибок, &quot;try..catch&quot;&lt;/li&gt;&lt;li&gt;Пользовательские ошибки, расширение Error&lt;/li&gt;&lt;li&gt;Промисы, async/await&lt;/li&gt;&lt;li&gt;Введение: колбэки&lt;/li&gt;&lt;li&gt;Промисы&lt;/li&gt;&lt;li&gt;Цепочка промисов&lt;/li&gt;&lt;li&gt;Промисы: обработка ошибок&lt;/li&gt;&lt;li&gt;Promise API&lt;/li&gt;&lt;li&gt;Промисификация&lt;/li&gt;&lt;li&gt;Микрозадачи&lt;/li&gt;&lt;li&gt;Async/await&lt;/li&gt;&lt;li&gt;Генераторы, продвинутая итерация&lt;/li&gt;&lt;li&gt;Генераторы&lt;/li&gt;&lt;li&gt;Асинхронные итераторы и генераторы&lt;/li&gt;&lt;li&gt;Модули&lt;/li&gt;&lt;li&gt;Модули, введение&lt;/li&gt;&lt;li&gt;Экспорт и импорт&lt;/li&gt;&lt;li&gt;Динамические импорты&lt;/li&gt;&lt;li&gt;Разное&lt;/li&gt;&lt;li&gt;Proxy и Reflect&lt;/li&gt;&lt;li&gt;Eval: выполнение строки кода&lt;/li&gt;&lt;li&gt;Каррирование&lt;/li&gt;&lt;li&gt;Ссылочный тип&lt;/li&gt;&lt;li&gt;Побитовые операторы&lt;/li&gt;&lt;li&gt;BigInt&lt;/li&gt;&lt;li&gt;Юникод, внутреннее устройство строк&lt;/li&gt;&lt;li&gt;Intl: интернационализация в JavaScript&lt;/li&gt;&lt;li&gt;WeakRef и FinalizationRegistry&lt;/li&gt;&lt;li&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;Браузер: документ, события, интерфейсы&lt;/li&gt;&lt;li&gt;Изучаем работу со страницей – как получать элементы, манипулировать их размерами, динамически создавать интерфейсы и взаимодействовать с посетителем.&lt;/li&gt;&lt;li&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;Документ&lt;/li&gt;&lt;li&gt;Браузерное окружение, спецификации&lt;/li&gt;&lt;li&gt;DOM-дерево&lt;/li&gt;&lt;li&gt;Навигация по DOM-элементам&lt;/li&gt;&lt;li&gt;Поиск: getElement*, querySelector*&lt;/li&gt;&lt;li&gt;Свойства узлов: тип, тег и содержимое&lt;/li&gt;&lt;li&gt;Атрибуты и свойства&lt;/li&gt;&lt;li&gt;Изменение документа&lt;/li&gt;&lt;li&gt;Стили и классы&lt;/li&gt;&lt;li&gt;Размеры и прокрутка элементов&lt;/li&gt;&lt;li&gt;Размеры и прокрутка окна&lt;/li&gt;&lt;li&gt;Координаты&lt;/li&gt;&lt;li&gt;Введение в события&lt;/li&gt;&lt;li&gt;Введение в браузерные события&lt;/li&gt;&lt;li&gt;Всплытие и погружение&lt;/li&gt;&lt;li&gt;Делегирование событий&lt;/li&gt;&lt;li&gt;Действия браузера по умолчанию&lt;/li&gt;&lt;li&gt;Генерация пользовательских событий&lt;/li&gt;&lt;li&gt;Интерфейсные события&lt;/li&gt;&lt;li&gt;Основы событий мыши&lt;/li&gt;&lt;li&gt;Движение мыши: mouseover/out, mouseenter/leave&lt;/li&gt;&lt;li&gt;Drag&#39;n&#39;Drop с событиями мыши&lt;/li&gt;&lt;li&gt;Клавиатура: keydown и keyup&lt;/li&gt;&lt;li&gt;События указателя&lt;/li&gt;&lt;li&gt;Прокрутка&lt;/li&gt;&lt;li&gt;Формы, элементы управления&lt;/li&gt;&lt;li&gt;Свойства и методы формы&lt;/li&gt;&lt;li&gt;Фокусировка: focus/blur&lt;/li&gt;&lt;li&gt;События: change, input, cut, copy, paste&lt;/li&gt;&lt;li&gt;Отправка формы: событие и метод submit&lt;/li&gt;&lt;li&gt;Загрузка документа и ресурсов&lt;/li&gt;&lt;li&gt;Страница: DOMContentLoaded, load, beforeunload, unload&lt;/li&gt;&lt;li&gt;Скрипты: async, defer&lt;/li&gt;&lt;li&gt;Загрузка ресурсов: onload и onerror&lt;/li&gt;&lt;li&gt;Разное&lt;/li&gt;&lt;li&gt;MutationObserver: наблюдатель за изменениями&lt;/li&gt;&lt;li&gt;Selection и Range&lt;/li&gt;&lt;li&gt;Событийный цикл: микрозадачи и макрозадачи&lt;/li&gt;&lt;li&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;Тематические разделы&lt;/li&gt;&lt;li&gt;Важные темы, читать которые можно в любом порядке.&lt;/li&gt;&lt;li&gt;Фреймы и окна&lt;/li&gt;&lt;li&gt;Открытие окон и методы window&lt;/li&gt;&lt;li&gt;Общение между окнами&lt;/li&gt;&lt;li&gt;Атака типа clickjacking&lt;/li&gt;&lt;li&gt;Бинарные данные и файлы&lt;/li&gt;&lt;li&gt;ArrayBuffer, бинарные массивы&lt;/li&gt;&lt;li&gt;TextDecoder и TextEncoder&lt;/li&gt;&lt;li&gt;Blob&lt;/li&gt;&lt;li&gt;File и FileReader&lt;/li&gt;&lt;li&gt;Сетевые запросы&lt;/li&gt;&lt;li&gt;Fetch&lt;/li&gt;&lt;li&gt;FormData&lt;/li&gt;&lt;li&gt;Fetch: ход загрузки&lt;/li&gt;&lt;li&gt;Fetch: прерывание запроса&lt;/li&gt;&lt;li&gt;Fetch: запросы на другие сайты&lt;/li&gt;&lt;li&gt;Fetch API&lt;/li&gt;&lt;li&gt;Объекты URL&lt;/li&gt;&lt;li&gt;XMLHttpRequest&lt;/li&gt;&lt;li&gt;Возобновляемая загрузка файлов&lt;/li&gt;&lt;li&gt;Длинные опросы&lt;/li&gt;&lt;li&gt;WebSocket&lt;/li&gt;&lt;li&gt;Server Sent Events&lt;/li&gt;&lt;li&gt;Хранение данных в браузере&lt;/li&gt;&lt;li&gt;Куки, document.cookie&lt;/li&gt;&lt;li&gt;LocalStorage, sessionStorage&lt;/li&gt;&lt;li&gt;IndexedDB&lt;/li&gt;&lt;li&gt;Анимация&lt;/li&gt;&lt;li&gt;Кривые Безье&lt;/li&gt;&lt;li&gt;CSS-анимации&lt;/li&gt;&lt;li&gt;JavaScript-анимации&lt;/li&gt;&lt;li&gt;Веб-компоненты&lt;/li&gt;&lt;li&gt;С орбитальной высоты&lt;/li&gt;&lt;li&gt;Пользовательские элементы (Custom Elements)&lt;/li&gt;&lt;li&gt;Shadow DOM&lt;/li&gt;&lt;li&gt;Элемент &quot;template&quot;&lt;/li&gt;&lt;li&gt;Слоты теневого DOM, композиция&lt;/li&gt;&lt;li&gt;Настройка стилей теневого DOM&lt;/li&gt;&lt;li&gt;Теневой DOM и события&lt;/li&gt;&lt;li&gt;Регулярные выражения&lt;/li&gt;&lt;li&gt;Введение: шаблоны и флаги&lt;/li&gt;&lt;li&gt;Символьные классы&lt;/li&gt;&lt;li&gt;Юникод: флаг &quot;u&quot; и класс \p{...}&lt;/li&gt;&lt;li&gt;Якоря: начало строки ^ и конец $&lt;/li&gt;&lt;li&gt;Многострочный режим якорей ^ $, флаг &quot;m&quot;&lt;/li&gt;&lt;li&gt;Граница слова: \b&lt;/li&gt;&lt;li&gt;Экранирование, специальные символы&lt;/li&gt;&lt;li&gt;Наборы и диапазоны [...]&lt;/li&gt;&lt;li&gt;Квантификаторы +, *, ? и {n}&lt;/li&gt;&lt;li&gt;Жадные и ленивые квантификаторы&lt;/li&gt;&lt;li&gt;Скобочные группы&lt;/li&gt;&lt;li&gt;Обратные ссылки в шаблоне: \N и \k&amp;lt;имя&amp;gt;&lt;/li&gt;&lt;li&gt;Альтернация (или) |&lt;/li&gt;&lt;li&gt;Опережающие и ретроспективные проверки&lt;/li&gt;&lt;li&gt;Катастрофический возврат&lt;/li&gt;&lt;li&gt;Поиск на заданной позиции, флаг &quot;y&quot;&lt;/li&gt;&lt;li&gt;Методы RegExp и String&lt;/li&gt;&lt;li&gt;CSS для JavaScript-разработчика&lt;/li&gt;&lt;li&gt;О чём пойдёт речь&lt;/li&gt;&lt;li&gt;Единицы измерения: px, em, rem и другие&lt;/li&gt;&lt;li&gt;Все значения свойства display&lt;/li&gt;&lt;li&gt;Свойство float&lt;/li&gt;&lt;li&gt;Свойство position&lt;/li&gt;&lt;li&gt;Центрирование горизонтальное и вертикальное&lt;/li&gt;&lt;li&gt;Свойства font-size и line-height&lt;/li&gt;&lt;li&gt;Свойство white-space&lt;/li&gt;&lt;li&gt;Свойство outline&lt;/li&gt;&lt;li&gt;Свойство box-sizing&lt;/li&gt;&lt;li&gt;Свойство margin&lt;/li&gt;&lt;li&gt;Лишнее место под IMG&lt;/li&gt;&lt;li&gt;Свойство overflow&lt;/li&gt;&lt;li&gt;Особенности свойства height в %&lt;/li&gt;&lt;li&gt;Знаете ли вы селекторы?&lt;/li&gt;&lt;li&gt;CSS-спрайты&lt;/li&gt;&lt;li&gt;Правила форматирования CSS&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;glass=0;strokeWidth=1;shadow=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="1480" y="260" width="620" height="3440" as="geometry" />
        </mxCell>
        <mxCell id="tXAnvfTIk08DneQXC5Ik-19" value="&lt;h2&gt;&lt;font style=&quot;font-size: 50px;&quot;&gt;JS&lt;/font&gt;&lt;/h2&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;glass=0;strokeWidth=1;shadow=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="1740" y="60" width="400" height="170" as="geometry" />
        </mxCell>
        <mxCell id="tXAnvfTIk08DneQXC5Ik-20" value="" style="html=1;shadow=0;dashed=0;align=center;verticalAlign=middle;shape=mxgraph.arrows2.arrow;dy=0.67;dx=20;notch=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="1110" y="70" width="590" height="60" as="geometry" />
        </mxCell>
        <mxCell id="tXAnvfTIk08DneQXC5Ik-21" value="&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;### Введение&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Введение в JavaScript&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Основы языка программирования JavaScript.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: История, версии, среда выполнения.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Справочники и спецификации&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Ресурсы для изучения и справочные материалы.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: MDN Web Docs, ECMAScript спецификации.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Редакторы кода&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Инструменты для написания и редактирования кода.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Visual Studio Code, Sublime Text, WebStorm.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Консоль разработчика&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Инструмент для отладки и тестирования кода в браузере.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Открытие консоли, выполнение команд, просмотр ошибок.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;### Основы JavaScript&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Привет, мир!&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Первая программа на JavaScript.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `alert`, `console.log`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Структура кода&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Основные блоки кода.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `&amp;lt;script&amp;gt;`, внешние файлы.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Строгий режим — &quot;use strict&quot;&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Включение строгого режима для предотвращения ошибок.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `&quot;use strict&quot;;`, преимущества.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Переменные&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Объявление и использование переменных.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `var`, `let`, `const`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Типы данных&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Основные типы данных в JavaScript.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `number`, `string`, `boolean`, `null`, `undefined`, `object`, `symbol`, `bigint`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Взаимодействие: alert, prompt, confirm&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Встроенные функции для взаимодействия с пользователем.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `alert`, `prompt`, `confirm`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Преобразование типов&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Преобразование данных из одного типа в другой.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `String()`, `Number()`, `Boolean()`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Базовые операторы, математика&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Основные математические операторы.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `+`, `-`, `*`, `/`, `%`, `**`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Операторы сравнения&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Операторы для сравнения значений.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `==`, `===`, `!=`, `!==`, `&amp;gt;`, `&amp;lt;`, `&amp;gt;=`, `&amp;lt;=`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Условное ветвление: if, &#39;?&#39;&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Условные операторы для выполнения кода.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `if`, `else if`, `else`, `? :`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Логические операторы&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Операторы для логических операций.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `&amp;amp;&amp;amp;`, `||`, `!`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Операторы нулевого слияния и присваивания: &#39;??&#39;, &#39;??=&#39;&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Операторы для работы с `null` и `undefined`.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `??`, `??=`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Циклы while и for&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Циклы для повторения кода.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `while`, `do...while`, `for`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Конструкция &quot;switch&quot;&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Многовариантное ветвление.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `switch`, `case`, `break`, `default`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Функции&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Объявление и использование функций.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `function`, параметры, возврат значений.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Function Expression&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Функции как выражения.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Анонимные функции, присваивание функций переменным.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Стрелочные функции, основы&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Современный синтаксис для объявления функций.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `=&amp;gt;`, контекст `this`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Особенности JavaScript&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Уникальные особенности языка.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Динамическая типизация, прототипное наследование.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Качество кода&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Практики для написания качественного кода.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Читаемость, поддерживаемость, тестирование.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Отладка в браузере&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Инструменты и методы отладки.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Breakpoints, консоль, инспектор.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Советы по стилю кода&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Рекомендации по стилю написания кода.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Именование переменных, отступы, комментарии.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Комментарии&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Добавление комментариев в код.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Однострочные (`//`), многострочные (`/* ... */`).&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Ниндзя-код&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Избегание сложного и нечитаемого кода.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Простота, ясность, понятность.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Автоматическое тестирование c использованием фреймворка Mocha&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Тестирование кода с помощью Mocha.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Установка, написание тестов, запуск тестов.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Полифилы&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Обеспечение совместимости с устаревшими браузерами.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Babel, polyfill.io.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Объекты: основы&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Основы работы с объектами.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Создание, доступ к свойствам, методы.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Объекты&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Подробное изучение объектов.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Литералы объектов, вложенные объекты.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Копирование объектов и ссылки&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Копирование объектов и работа со ссылками.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Поверхностное копирование, глубокое копирование.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Сборка мусора&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Управление памятью в JavaScript.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Автоматическая сборка мусора, утечки памяти.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Методы объекта, &quot;this&quot;&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Методы объектов и контекст `this`.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `this`, методы, контекст вызова.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Конструктор, оператор &quot;new&quot;&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Создание объектов с помощью конструкторов.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `new`, конструкторные функции.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Опциональная цепочка &#39;?.&#39;&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Безопасный доступ к вложенным свойствам.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `?.`, предотвращение ошибок.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Тип данных Symbol&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Уникальные и неизменяемые идентификаторы.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `Symbol()`, использование символов.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Преобразование объектов в примитивы&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Преобразование объектов в примитивные типы.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `toString`, `valueOf`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Типы данных&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Подробное изучение типов данных.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Примитивы, объекты, специальные типы.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Методы примитивов&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Методы для работы с примитивными типами.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Методы строк, чисел, булевых значений.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Числа&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с числовыми данными.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Арифметические операции, методы чисел.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Строки&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа со строками.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Методы строк, шаблонные строки.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Массивы&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с массивами.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Создание, доступ, методы массивов.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Методы массивов&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Методы для работы с массивами.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `push`, `pop`, `shift`, `unshift`, `map`, `filter`, `reduce`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Перебираемые объекты&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Объекты, поддерживающие перебор.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Итераторы, `for...of`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Map и Set&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Коллекции для хранения данных.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `Map`, `Set`, методы.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### WeakMap и WeakSet&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Коллекции для хранения слабых ссылок.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `WeakMap`, `WeakSet`, использование.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Object.keys, values, entries&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Методы для работы с ключами, значениями и элементами объектов.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `Object.keys`, `Object.values`, `Object.entries`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Деструктурирующее присваивание&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Распаковка значений из массивов и объектов.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Деструктуризация массивов, объектов.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Дата и время&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с датами и временем.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `Date`, методы даты.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Формат JSON, метод toJSON&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с JSON.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `JSON.stringify`, `JSON.parse`, `toJSON`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Продвинутая работа с функциями&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Продвинутые темы работы с функциями.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Рекурсия, остаточные параметры, замыкания.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Рекурсия и стек&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Рекурсивные функции и стек вызовов.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Рекурсия, базовый случай, стек вызовов.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Остаточные параметры и оператор расширения&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с остаточными параметрами и оператором расширения.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `...`, остаточные параметры, расширение.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Область видимости переменных, замыкание&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Область видимости переменных и замыкания.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Лексическая область видимости, замыкания.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Устаревшее ключевое слово &quot;var&quot;&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Использование `var` и его недостатки.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `var`, проблемы с областью видимости.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Глобальный объект&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Глобальный объект в JavaScript.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `window`, `globalThis`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Объект функции, NFE&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Объект функции и именованные функциональные выражения.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Свойства функций, NFE.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Синтаксис &quot;new Function&quot;&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Создание функций с помощью `new Function`.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `new Function`, динамическое создание функций.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Планирование: setTimeout и setInterval&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Планирование выполнения кода.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `setTimeout`, `setInterval`, `clearTimeout`, `clearInterval`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Декораторы и переадресация вызова, call/apply&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Декораторы и переадресация вызова.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `call`, `apply`, декораторы.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Привязка контекста к функции&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Привязка контекста к функции.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `bind`, частичное применение.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Повторяем стрелочные функции&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Повторение стрелочных функций.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Синтаксис, контекст `this`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Свойства объекта, их конфигурация&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Конфигурация свойств объектов.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Дескрипторы свойств, `Object.defineProperty`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Флаги и дескрипторы свойств&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Флаги и дескрипторы свойств.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `writable`, `enumerable`, `configurable`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Свойства - геттеры и сеттеры&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Геттеры и сеттеры для свойств объектов.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `get`, `set`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Прототипы, наследование&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Прототипное наследование в JavaScript.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `prototype`, `__proto__`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Прототипное наследование&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Основы прототипного наследования.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Прототипы, цепочка прототипов.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### F.prototype&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Свойство `prototype` функций.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `prototype`, методы прототипов.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Встроенные прототипы&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Встроенные прототипы в JavaScript.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Прототипы объектов, массивов, функций.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Методы прототипов, объекты без свойства __proto__&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Методы прототипов и объекты без `__proto__`.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `Object.create(null)`, методы прототипов.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Классы&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Основы работы с классами.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `class`, конструкторы, методы.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Класс: базовый синтаксис&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Базовый синтаксис классов.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `class`, конструкторы, методы.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Наследование классов&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Наследование классов.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `extends`, `super`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Статические свойства и методы&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Статические свойства и методы классов.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `static`, статические методы и свойства.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Приватные и защищённые методы и свойства&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Приватные и защищённые методы и свойства.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `#`, приватные методы и свойства.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Расширение встроенных классов&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Расширение встроенных классов.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Наследование от встроенных классов.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Проверка класса: &quot;instanceof&quot;&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Проверка принадлежности объекта классу.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `instanceof`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Примеси&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Примеси для расширения функциональности классов.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Примеси, миксины.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Обработка ошибок&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Обработка ошибок в JavaScript.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `try`, `catch`, `finally`, `throw`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Обработка ошибок, &quot;try..catch&quot;&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Обработка ошибок с помощью `try..catch`.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `try`, `catch`, `finally`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Пользовательские ошибки, расширение Error&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Создание пользовательских ошибок.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Расширение `Error`, пользовательские ошибки.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Промисы, async/await&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с промисами и async/await.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Промисы, `async`, `await`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Введение: колбэки&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Введение в колбэки.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Колбэки, асинхронное программирование.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Промисы&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Основы работы с промисами.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `Promise`, `then`, `catch`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Цепочка промисов&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Цепочка промисов.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `then`, `catch`, цепочка промисов.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Промисы: обработка ошибок&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Обработка ошибок в промисах.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `catch`, обработка ошибок.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Promise API&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: API для работы с промисами.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `Promise.all`, `Promise.race`, `Promise.allSettled`, `Promise.any`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Промисификация&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Промисификация функций.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Преобразование колбэков в промисы.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Микрозадачи&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Микрозадачи и очередь микрозадач.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `queueMicrotask`, микрозадачи.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Async/await&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с async/await.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `async`, `await`, асинхронные функции.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Генераторы, продвинутая итерация&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Генераторы и продвинутая итерация.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Генераторы, итераторы.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Генераторы&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Основы работы с генераторами.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `function*`, `yield`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Асинхронные итераторы и генераторы&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Асинхронные итераторы и генераторы.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Асинхронные итераторы, асинхронные генераторы.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Модули&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с модулями в JavaScript.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `import`, `export`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Модули, введение&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Введение в модули.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `import`, `export`, модули.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Экспорт и импорт&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Экспорт и импорт модулей.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `export`, `import`, `export default`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Динамические импорты&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Динамические импорты модулей.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `import()`, динамические импорты.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Разное&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Разные темы и инструменты.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Proxy, Reflect, Eval, каррирование.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Proxy и Reflect&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с Proxy и Reflect.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `Proxy`, `Reflect`, перехват операций.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Eval: выполнение строки кода&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Выполнение строки кода с помощью `eval`.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `eval`, безопасность.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Каррирование&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Каррирование функций.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Каррирование, частичное применение.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Ссылочный тип&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Ссылочные типы данных.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Ссылочные типы, копирование.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Побитовые операторы&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Побитовые операторы.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `&amp;amp;`, `|`, `^`, `~`, `&amp;lt;&amp;lt;`, `&amp;gt;&amp;gt;`, `&amp;gt;&amp;gt;&amp;gt;`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### BigInt&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с большими целыми числами.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `BigInt`, операции с большими числами.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Юникод, внутреннее устройство строк&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с Юникод и строками.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Юникод, внутреннее устройство строк.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Intl: интернационализация в JavaScript&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Интернационализация в JavaScript.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `Intl`, форматирование дат, чисел, валют.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### WeakRef и FinalizationRegistry&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с WeakRef и FinalizationRegistry.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `WeakRef`, `FinalizationRegistry`, управление памятью.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;### Браузер: документ, события, интерфейсы&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Документ&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с документом в браузере.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: DOM, манипуляции с элементами.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Браузерное окружение, спецификации&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Браузерное окружение и спецификации.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: DOM, BOM, спецификации.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### DOM-дерево&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Структура DOM-дерева.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Узлы, элементы, текстовые узлы.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Навигация по DOM-элементам&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Навигация по DOM-элементам.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `parentNode`, `childNodes`, `firstChild`, `lastChild`, `nextSibling`, `previousSibling`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Поиск: getElement*, querySelector*&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Поиск элементов в DOM.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `getElementById`, `querySelector`, `querySelectorAll`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Свойства узлов: тип, тег и содержимое&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Свойства узлов DOM.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `nodeType`, `nodeName`, `innerHTML`, `textContent`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Атрибуты и свойства&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с атрибутами и свойствами элементов.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `getAttribute`, `setAttribute`, `removeAttribute`, `attributes`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Изменение документа&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Изменение документа.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Создание, удаление, изменение элементов.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Стили и классы&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа со стилями и классами.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `style`, `className`, `classList`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Размеры и прокрутка элементов&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Размеры и прокрутка элементов.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `offsetWidth`, `offsetHeight`, `clientWidth`, `clientHeight`, `scrollWidth`, `scrollHeight`, `scrollLeft`, `scrollTop`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Размеры и прокрутка окна&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Размеры и прокрутка окна.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `window.innerWidth`, `window.innerHeight`, `document.documentElement.clientWidth`, `document.documentElement.clientHeight`, `window.scrollX`, `window.scrollY`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Координаты&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с координатами элементов.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `getBoundingClientRect`, `offsetParent`, `offsetLeft`, `offsetTop`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Введение в события&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Введение в события в браузере.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: События, обработчики событий.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Введение в браузерные события&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Основы браузерных событий.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: События, обработчики событий, `addEventListener`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Всплытие и погружение&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Всплытие и погружение событий.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Всплытие, погружение, `event.stopPropagation`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Делегирование событий&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Делегирование событий.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Делегирование, `event.target`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Действия браузера по умолчанию&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Действия браузера по умолчанию.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `event.preventDefault`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Генерация пользовательских событий&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Генерация пользовательских событий.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `Event`, `CustomEvent`, `dispatchEvent`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Интерфейсные события&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Интерфейсные события.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: События мыши, клавиатуры, фокуса.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Основы событий мыши&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Основы событий мыши.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `click`, `dblclick`, `mousedown`, `mouseup`, `mousemove`, `mouseover`, `mouseout`, `mouseenter`, `mouseleave`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Движение мыши: mouseover/out, mouseenter/leave&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Движение мыши.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `mouseover`, `mouseout`, `mouseenter`, `mouseleave`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Drag&#39;n&#39;Drop с событиями мыши&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Drag&#39;n&#39;Drop с событиями мыши.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `mousedown`, `mousemove`, `mouseup`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Клавиатура: keydown и keyup&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: События клавиатуры.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `keydown`, `keyup`, `keypress`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### События указателя&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: События указателя.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `pointerdown`, `pointerup`, `pointermove`, `pointerover`, `pointerout`, `pointerenter`, `pointerleave`, `pointercancel`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Прокрутка&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: События прокрутки.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `scroll`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Формы, элементы управления&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с формами и элементами управления.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `&amp;lt;form&amp;gt;`, `&amp;lt;input&amp;gt;`, `&amp;lt;textarea&amp;gt;`, `&amp;lt;select&amp;gt;`, `&amp;lt;button&amp;gt;`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Свойства и методы формы&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Свойства и методы формы.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `elements`, `submit`, `reset`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Фокусировка: focus/blur&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Фокусировка элементов.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `focus`, `blur`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### События: change, input, cut, copy, paste&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: События изменения и ввода.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `change`, `input`, `cut`, `copy`, `paste`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Отправка формы: событие и метод submit&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Отправка формы.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `submit`, `onsubmit`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Загрузка документа и ресурсов&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Загрузка документа и ресурсов.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `DOMContentLoaded`, `load`, `beforeunload`, `unload`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Страница: DOMContentLoaded, load, beforeunload, unload&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: События загрузки страницы.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `DOMContentLoaded`, `load`, `beforeunload`, `unload`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Скрипты: async, defer&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Атрибуты `async` и `defer` для скриптов.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `async`, `defer`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Загрузка ресурсов: onload и onerror&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Загрузка ресурсов.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `onload`, `onerror`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Разное&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Разные темы и инструменты.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: MutationObserver, Selection, Range, событийный цикл.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### MutationObserver: наблюдатель за изменениями&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Наблюдатель за изменениями в DOM.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `MutationObserver`, `observe`, `disconnect`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Selection и Range&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с выделением и диапазонами.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `Selection`, `Range`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Событийный цикл: микрозадачи и макрозадачи&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Событийный цикл в JavaScript.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Микрозадачи, макрозадачи, очередь задач.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;### Тематические разделы&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Фреймы и окна&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с фреймами и окнами.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `window`, `frames`, `iframe`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Открытие окон и методы window&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Открытие окон и методы объекта `window`.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `window.open`, `window.close`, `window.focus`, `window.blur`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Общение между окнами&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Общение между окнами.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `postMessage`, `MessageEvent`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Атака типа clickjacking&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Атака типа clickjacking.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Clickjacking, защита.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Бинарные данные и файлы&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с бинарными данными и файлами.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `ArrayBuffer`, `Blob`, `File`, `FileReader`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### ArrayBuffer, бинарные массивы&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с `ArrayBuffer` и бинарными массивами.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `ArrayBuffer`, `TypedArray`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### TextDecoder и TextEncoder&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Кодирование и декодирование текста.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `TextDecoder`, `TextEncoder`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Blob&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с `Blob`.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `Blob`, `URL.createObjectURL`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### File и FileReader&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с `File` и `FileReader`.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `File`, `FileReader`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Сетевые запросы&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Сетевые запросы в JavaScript.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `Fetch`, `XMLHttpRequest`, `WebSocket`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Fetch&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с `Fetch`.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `fetch`, `Request`, `Response`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### FormData&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с `FormData`.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `FormData`, отправка форм.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Fetch: ход загрузки&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Ход загрузки с `Fetch`.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `fetch`, `ReadableStream`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Fetch: прерывание запроса&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Прерывание запроса с `Fetch`.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `AbortController`, `AbortSignal`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Fetch: запросы на другие сайты&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Запросы на другие сайты с `Fetch`.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: CORS, `fetch`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Fetch API&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Fetch API.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `fetch`, `Request`, `Response`, `Headers`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Объекты URL&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с объектами URL.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `URL`, `URLSearchParams`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### XMLHttpRequest&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с `XMLHttpRequest`.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `XMLHttpRequest`, `open`, `send`, `onreadystatechange`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Возобновляемая загрузка файлов&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Возобновляемая загрузка файлов.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `XMLHttpRequest`, `Range`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Длинные опросы&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Длинные опросы.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Long Polling, `XMLHttpRequest`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### WebSocket&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с `WebSocket`.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `WebSocket`, `onopen`, `onmessage`, `onclose`, `onerror`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Server Sent Events&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Server Sent Events.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `EventSource`, `onmessage`, `onerror`, `onopen`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Хранение данных в браузере&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Хранение данных в браузере.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `cookies`, `localStorage`, `sessionStorage`, `IndexedDB`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Куки, document.cookie&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с куками.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `document.cookie`, `cookie`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### LocalStorage, sessionStorage&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с `localStorage` и `sessionStorage`.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `localStorage`, `sessionStorage`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### IndexedDB&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Работа с `IndexedDB`.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `IndexedDB`, `IDBDatabase`, `IDBTransaction`, `IDBObjectStore`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Анимация&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Анимация в JavaScript.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: CSS-анимации, JavaScript-анимации.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Кривые Безье&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Кривые Безье.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Кривые Безье, `canvas`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### CSS-анимации&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: CSS-анимации.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `@keyframes`, `animation`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### JavaScript-анимации&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: JavaScript-анимации.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `requestAnimationFrame`, `setInterval`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Веб-компоненты&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Веб-компоненты.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Пользовательские элементы, Shadow DOM, элемент `template`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### С орбитальной высоты&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Обзор веб-компонентов.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Веб-компоненты, Shadow DOM, элемент `template`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Пользовательские элементы (Custom Elements)&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Пользовательские элементы.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `customElements.define`, `HTMLElement`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Shadow DOM&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Shadow DOM.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `attachShadow`, `shadowRoot`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Элемент &quot;template&quot;&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Элемент `template`.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `&amp;lt;template&amp;gt;`, `content`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Слоты теневого DOM, композиция&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Слоты теневого DOM и композиция.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `&amp;lt;slot&amp;gt;`, `slot`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Настройка стилей теневого DOM&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Настройка стилей теневого DOM.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `:host`, `::slotted`, `::part`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Теневой DOM и события&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Теневой DOM и события.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: События в Shadow DOM, `composed`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Регулярные выражения&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Регулярные выражения в JavaScript.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `RegExp`, `test`, `exec`, `match`, `replace`, `search`, `split`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Введение: шаблоны и флаги&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Введение в шаблоны и флаги регулярных выражений.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Шаблоны, флаги.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Символьные классы&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Символьные классы в регулярных выражениях.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `[]`, `\d`, `\w`, `\s`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Юникод: флаг &quot;u&quot; и класс \p{...}&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Юникод и флаг `u` в регулярных выражениях.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `u`, `\p{...}`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Якоря: начало строки ^ и конец $&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Якоря в регулярных выражениях.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `^`, `$`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Многострочный режим якорей ^ $, флаг &quot;m&quot;&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Многострочный режим якорей.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `m`, `^`, `$`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Граница слова: \b&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Граница слова в регулярных выражениях.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `\b`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Экранирование, специальные символы&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Экранирование и специальные символы в регулярных выражениях.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `\`, специальные символы.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Наборы и диапазоны [...]&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Наборы и диапазоны в регулярных выражениях.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `[]`, диапазоны.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Квантификаторы +, *, ? и {n}&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Квантификаторы в регулярных выражениях.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `+`, `*`, `?`, `{n}`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Жадные и ленивые квантификаторы&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Жадные и ленивые квантификаторы.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Жадные, ленивые квантификаторы.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Скобочные группы&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Скобочные группы в регулярных выражениях.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `()`, группы.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Обратные ссылки в шаблоне: \N и \k&amp;lt;имя&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Обратные ссылки в регулярных выражениях.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `\N`, `\k&amp;lt;имя&amp;gt;`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Альтернация (или) |&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Альтернация в регулярных выражениях.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `|`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Опережающие и ретроспективные проверки&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Опережающие и ретроспективные проверки.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `(?=...)`, `(?!...)`, `(?&amp;lt;=...)`, `(?&amp;lt;!...)`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Катастрофический возврат&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Катастрофический возврат в регулярных выражениях.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Катастрофический возврат, оптимизация.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Поиск на заданной позиции, флаг &quot;y&quot;&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Поиск на заданной позиции.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `y`, `lastIndex`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Методы RegExp и String&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Методы `RegExp` и `String`.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `test`, `exec`, `match`, `replace`, `search`, `split`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### CSS для JavaScript-разработчика&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: CSS для JavaScript-разработчика.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Основы CSS, стилизация элементов.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### О чём пойдёт речь&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Введение в CSS для JavaScript-разработчика.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Основы CSS, стилизация элементов.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Единицы измерения: px, em, rem и другие&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Единицы измерения в CSS.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `px`, `em`, `rem`, `%`, `vh`, `vw`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Все значения свойства display&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Значения свойства `display`.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `block`, `inline`, `inline-block`, `flex`, `grid`, `none`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Свойство float&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Свойство `float`.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `float`, `clear`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Свойство position&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Свойство `position`.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `static`, `relative`, `absolute`, `fixed`, `sticky`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Центрирование горизонтальное и вертикальное&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Центрирование элементов.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Горизонтальное, вертикальное центрирование.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Свойства font-size и line-height&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Свойства `font-size` и `line-height`.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `font-size`, `line-height`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Свойство white-space&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Свойство `white-space`.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `white-space`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Свойство outline&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Свойство `outline`.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `outline`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Свойство box-sizing&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Свойство `box-sizing`.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `box-sizing`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Свойство margin&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Свойство `margin`.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `margin`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Лишнее место под IMG&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Лишнее место под изображениями.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Лишнее место под `&amp;lt;img&amp;gt;`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Свойство overflow&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Свойство `overflow`.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `overflow`.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Особенности свойства height в %&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Особенности свойства `height` в процентах.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: `height` в процентах.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Знаете ли вы селекторы?&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Селекторы в CSS.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Селекторы.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### CSS-спрайты&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: CSS-спрайты.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: CSS-спрайты.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;#### Правила форматирования CSS&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Описание**: Правила форматирования CSS.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- **Ключевые моменты**: Форматирование CSS.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Эти шпаргалки охватывают основные темы и разделы по JavaScript, которые важны для frontend разработчика.&lt;/span&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;glass=0;strokeWidth=1;shadow=0;align=center;fillStyle=auto;fillColor=default;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="1140" y="3860" width="1440" height="12940" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
